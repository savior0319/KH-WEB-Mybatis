@ Framework란 ?
-> 개발자가 소프트웨어를 개발함에 있어 코드를 구현하는 개발시간을 줄이고,
코드의 재사용성을 증가시키기 위해 일련의 클래스 묶음이나 뼈대, 틀을 제공하는
라이브러리를 구현해 놓은것을 뜻함

@ Framework의 특징
1. 개발자가 따라야 하는 가이드를 제공
2. 개발 할 수 있는 범위가 정해져 있음
3. 개발자를 위한 다양한 도구 및 플러그인을 제공

## 장점 ##
-> 개발 시간을 줄일 수 있음
-> 정형화 되어 있어 일정 수준 이상의 품질을 기대 할 수 있음
-> 유지 보수가 쉬움

## 단점 ##
-> 너무 의존 하면 개발자들의 능력이 떨어져서 스스로 직접적인 개발을 하는것이 어려워짐
-> 습득에 걸리는 시간이 오래 걸림

@ Framework의 종류

## 영속성 Framework ##
-> 데이터의 저장, 조회, 변경 삭제를 다루는 클래스 및 설정 파일들을 라이브러리화 하여
구현한 프레임 워크
- Mybatis(마이바티스)
- Hibernate (하이버네이트)

※ 영속성 프레임워크 : 정보에 대한 접근과 저장을 단순화 하는 라이브러리를 의미함

## 자바 Framework ##
-> JAVA EE를 통한 웹 애플리케이션 개발에 초점을 맞추어 필요한 요소들을 모듈화하여
제공하는 프레임 워크
- Spring Framework
- Struts

## 화면 구현 Framework ##
-> Front-end를 보다 쉽게 구현 할 수 있게 틀을 제공하는 프레임워크
- Bootstrap
- Foundation

## 기능 및 지원 Framework ##
-> 특정 기능이나 업무 수행에 도움을 줄 수 있는 기능을 제공하는 프레임 워크
- Log4j
- JUnit5

@ Mybatis
-> 데이터의 입력, 조회, 수정, 삭제(CRUD)를 보다 편하게 하기 위해 xml로 구조화 ㅎ여
Mapper 설정 파일을 통해서 JDBC를 구현한 영속성 프레임 워크
-> 기존에 JDBC를 통해 구현했던 상당 부분의 코드와 파라미터 설정 및 결과 매핑을
xml 설정을 통해 쉽게 구현 할 수 있게 해줌

※ Mybatis API 사이트
-> http://www.mybatis.org/mybatis-3/ko

@ Mybatis의 사용
-> 잊너 JDBC Template를 통해 DB에 접근 및 SQL을 실행 하였다면 이 코드를 
Mybatis 전용 라이브러리를 통해 대체 한다고 생각 하면 쉬움

@ ibatis와 Mybatis
-> 기존 Apache Project에서 ibatis를 운영하던 팀이 2010년 5월 9일에 Google팀으로 이동 하면서 Mybatis로 이름 변경
-> Mybatis는 기존의 ibatis의 한계점이 였던 동적 쿼리와 어노테이션 처리를 보강하여
더 나은 기능을 제공하고 있음
-> ibatis는 현재 비활성화 상태이며, 기존에 ibatis로 만들어진 애플리케이션의 지원을 위해 라이브러리만 제공하고 있음

※ Mybatis 라이브러리 다운로드 연동
-> https://github.com/mybatis/my batis-3/releases

이클립스 - 옵션 - xml에 추가

Location:			http://mybatis.org/dtd/mybatis-3-config.dtd
Key:				-//mybatis.org//DTD Config 3.0//EN

URI:   				http://mybatis.org/dtd/mybatis-3-mapper.dtd
Key:				-//mybatis.org/DTD Mapper 3.0//EN

@ Mybatis 맛보기
-> 최대한 스프링 구조와 비슷하게 만들도록 하겠음
-> Service, DAO를 생성할 때 interface를 제작하여 생성하도록 하겠음

-> Mybatis 맛보기를 통하여 Mybatis의 사용법 및 DB에 기본적인 데이터를 
삽입하는 방법을 익히도록 하겠음


@ 데이터를 전달 받아서 sql 구문에 넣는 방법

1. 단일 데이터인 경우
	#{변수명}으로 처리 하면 됨
※ 이 때, 사실 변수명은 중요하지 않음
	(넘겨주는 데이터가 1개이기 때문에 변수명의 역할은 크게 없음)

ex)

session, insert("student.test2", studentName);

mapper.xml에서 처리

<insert id="test2">
INSERT INTO STUDENT VALUES(SEQ_STUDENT.NEXTVAL, #{NAME}, '01012341234', 'ASD@EGEQ.ORG', '서울', DEFAULT)
</insert>

※ 즉, 넘겨주는 것은 studentName이지만 어차피 값이 하나라서 처리되는 이름은
아무거나 적어도 됨(하지만 가독성이 떨어지므로 똑같은 이름을 적는것을 권장함)

2. 다중 데이터라면? (2개 이상의 데이터 처리)
-> 다중 데이터는 인자값을 여러개 적어서 처리 할 수 있음
-> 즉, session.insert() 메소드로 사용 할 때
	session.insert("student.test2", studentName, studentTel, ....);
형태는 불가능 함
-> 방법은? VO객체에 담아서 VO 자체로 넘겨주는 방법을 사용 하면 됨
